# Generated by Django 2.0.6 on 2018-06-20 00:26

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('pokedex', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AbilityFlavorText',
            fields=[
                ('ability', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='pokedex.Abilities')),
                ('version_group_id', models.IntegerField(blank=True, null=True)),
                ('language_id', models.IntegerField(blank=True, null=True)),
                ('flavor_text', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ability_flavor_text',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EvolutionTriggerProse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evolution_trigger_id', models.IntegerField(blank=True, null=True)),
                ('local_language_id', models.IntegerField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'evolution_trigger_prose',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Machines',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('machine_number', models.IntegerField(blank=True, null=True)),
                ('version_group_id', models.IntegerField(blank=True, null=True)),
                ('item_id', models.IntegerField(blank=True, null=True)),
                ('move_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'machines',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MoveFlavorText',
            fields=[
                ('move', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='pokedex.Moves')),
                ('version_group_id', models.IntegerField(blank=True, null=True)),
                ('language_id', models.IntegerField(blank=True, null=True)),
                ('flavor_text', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'move_flavor_text',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PokemonEvolution',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('evolved_pokemon_id', models.IntegerField()),
                ('evolution_trigger_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pokemon_evolution',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PokemonFlavorText',
            fields=[
                ('pokemon', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='pokedex.Pokemon')),
                ('version_id', models.IntegerField(blank=True, null=True)),
                ('language_id', models.IntegerField(blank=True, null=True)),
                ('flavor_text', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pokemon_flavor_text',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TypeEfficacy',
            fields=[
                ('damage_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='pokedex.Types')),
                ('target_type_id', models.IntegerField()),
                ('damage_factor', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'type_efficacy',
                'managed': False,
            },
        ),
    ]
